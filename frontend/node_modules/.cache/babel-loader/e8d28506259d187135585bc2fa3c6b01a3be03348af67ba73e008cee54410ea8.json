{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasjeremy/dream-journal/frontend/src/AddDream.jsx\",\n  _s = $RefreshSig$();\nimport HeaderAndNavBar from './HeaderAndNavBar';\nimport analyze from './static/search.png';\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router\";\nimport { useState } from \"react\";\nimport axios from 'axios';\nimport './AddDream.css';\nimport test from './static/tesimg.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AddDream(props) {\n  _s();\n  let navigate = useNavigate();\n  const [submitStatus, setSubmitStatus] = useState(\"Analyze Dream\");\n  const [dream, setDream] = useState({\n    dreamAnalysis: \"hi\",\n    dreamGenre: \"bye\"\n  });\n  const responseGenerate = async (prompt, title) => {\n    // const result = await fetch(\"/api/ai\", {\n    //     method: \"POST\",\n    //     headers: {\n    //         \"Content-Type\": \"application/json\",\n    //     },\n    //     body: JSON.stringify({input: prompt})\n    //   })\n\n    //   if (result.ok) {\n    //     const airespond = await result.json(); // Parse the JSON response body\n    //     console.log(airespond);\n    // setDream((prevDream) => ({\n    //              ...prevDream,\n    //              dreamContent: prompt,\n    //              dreamAnalysis: airespond.result1,\n    //              dreamGenre: airespond.result2,\n    //              dreamTitle: title,\n    //         }))\n    //     setSubmitStatus(\"Submit\");\n    //     props.setDreams(prevDreams => [{dreamContent: prompt,\n    //         dreamAnalysis: airespond.result1, dreamGenre: airespond.result2}, ...prevDreams])\n    //   } else {\n    //     setSubmitStatus(\"Retry\");\n    //   }\n    setDream(prevDream => ({\n      ...prevDream,\n      dreamContent: prompt,\n      dreamAnalysis: prompt,\n      dreamGenre: \"Fantasy\",\n      dreamTitle: title\n    }));\n    props.setDreams(prevDreams => [{\n      dreamContent: prompt,\n      dreamAnalysis: prompt,\n      dreamGenre: \"Fantasy\",\n      dreamTitle: title,\n      dreamImage: test\n    }, ...prevDreams]);\n  };\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setSubmitStatus(\"Waiting\");\n    const formData = new FormData(e.currentTarget);\n    responseGenerate(formData.get(\"dreamDesc\"), formData.get(\"dreamTitle\"));\n\n    // navigate('/Dreams', {state: {dream: formData.get(\"dreamDesc\")}});\n    // navigate('/Dreams');\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderAndNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"dreamDescription\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"label1\",\n        htmlFor: \"title\",\n        children: \"Enter a title for your dream:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"dreamTitle\",\n        id: \"title\",\n        required: true,\n        placeholder: \"My Dream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"label2\",\n        htmlFor: \"desc\",\n        children: \"Describe your dream:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"dreamDesc\",\n        id: \"desc\",\n        required: true,\n        placeholder: \"I dreamed I was flying...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"analyzeButton\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          class: \"analyzeIcon\",\n          src: analyze,\n          alt: \"analyze dream\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), submitStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), dream.dreamAnalysis && dream.dreamGenre && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"AI\",\n      children: [dream.dreamAnalysis, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Genre: \", dream.dreamGenre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 51\n    }, this)]\n  }, void 0, true);\n}\n_s(AddDream, \"U00CnKAOuDzNYHrc0mEerZlQC9I=\", false, function () {\n  return [useNavigate];\n});\n_c = AddDream;\nexport default AddDream;\nvar _c;\n$RefreshReg$(_c, \"AddDream\");","map":{"version":3,"names":["HeaderAndNavBar","analyze","Link","useNavigate","useState","axios","test","jsxDEV","_jsxDEV","Fragment","_Fragment","AddDream","props","_s","navigate","submitStatus","setSubmitStatus","dream","setDream","dreamAnalysis","dreamGenre","responseGenerate","prompt","title","prevDream","dreamContent","dreamTitle","setDreams","prevDreams","dreamImage","handleSubmit","e","preventDefault","formData","FormData","currentTarget","get","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","id","htmlFor","name","required","placeholder","class","src","alt","_c","$RefreshReg$"],"sources":["/Users/nicholasjeremy/dream-journal/frontend/src/AddDream.jsx"],"sourcesContent":["import HeaderAndNavBar from './HeaderAndNavBar';\nimport analyze from './static/search.png';\nimport {Link} from \"react-router-dom\";\nimport { useNavigate } from \"react-router\";\nimport { useState } from \"react\"\nimport axios from 'axios';\nimport './AddDream.css';\nimport test from './static/tesimg.png';\n\nfunction AddDream(props) {\n    let navigate = useNavigate();\n    const [submitStatus, setSubmitStatus] = useState(\"Analyze Dream\");\n    const [dream, setDream] = useState({dreamAnalysis: \"hi\", dreamGenre: \"bye\"});\n\n    const responseGenerate = async (prompt, title) => {\n        // const result = await fetch(\"/api/ai\", {\n        //     method: \"POST\",\n        //     headers: {\n        //         \"Content-Type\": \"application/json\",\n        //     },\n        //     body: JSON.stringify({input: prompt})\n        //   })\n          \n        //   if (result.ok) {\n        //     const airespond = await result.json(); // Parse the JSON response body\n        //     console.log(airespond);\n            // setDream((prevDream) => ({\n            //              ...prevDream,\n            //              dreamContent: prompt,\n            //              dreamAnalysis: airespond.result1,\n            //              dreamGenre: airespond.result2,\n            //              dreamTitle: title,\n            //         }))\n        //     setSubmitStatus(\"Submit\");\n        //     props.setDreams(prevDreams => [{dreamContent: prompt,\n        //         dreamAnalysis: airespond.result1, dreamGenre: airespond.result2}, ...prevDreams])\n        //   } else {\n        //     setSubmitStatus(\"Retry\");\n        //   }\n        setDream((prevDream) => ({\n            ...prevDream,\n            dreamContent: prompt,\n            dreamAnalysis: prompt,\n            dreamGenre: \"Fantasy\",\n            dreamTitle: title,\n       }))\n        props.setDreams(prevDreams => [{dreamContent: prompt,\n                     dreamAnalysis: prompt, dreamGenre: \"Fantasy\", dreamTitle: title, dreamImage: test}, ...prevDreams])\n      };\n    \n    async function handleSubmit(e) {\n        e.preventDefault();\n        setSubmitStatus(\"Waiting\");\n        const formData = new FormData(e.currentTarget);\n        responseGenerate(formData.get(\"dreamDesc\"),formData.get(\"dreamTitle\"));\n        \n        // navigate('/Dreams', {state: {dream: formData.get(\"dreamDesc\")}});\n        // navigate('/Dreams');\n    }\n\n    return (\n      <>\n      <HeaderAndNavBar />\n\n      <form onSubmit={handleSubmit} className='dreamDescription'>\n      <label id='label1' htmlFor='title'>\n      Enter a title for your dream:\n      </label>\n            <input name='dreamTitle' id='title' required={true} placeholder='My Dream'></input>\n      <label id='label2' htmlFor='desc'>\n      Describe your dream:\n      </label>\n            <textarea name='dreamDesc' id='desc' required={true} placeholder='I dreamed I was flying...'></textarea>\n            <button class=\"analyzeButton\"> \n            <img class=\"analyzeIcon\" src={analyze} alt=\"analyze dream\" />\n            {submitStatus}\n            </button>\n      </form>\n      {dream.dreamAnalysis && dream.dreamGenre && <div id='AI'>\n        {dream.dreamAnalysis} \n        <p>Genre: {dream.dreamGenre}</p>\n        </div>}\n      </>\n    );\n  }\n  \n  export default AddDream;\n\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}