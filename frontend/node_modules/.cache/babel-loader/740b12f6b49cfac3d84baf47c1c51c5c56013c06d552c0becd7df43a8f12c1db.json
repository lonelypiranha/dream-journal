{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasjeremy/dream-journal/frontend/src/AddDream.jsx\",\n  _s = $RefreshSig$();\nimport HeaderAndNavBar from \"./HeaderAndNavBar\";\nimport analyze from \"./static/search.png\";\nimport save from \"./static/save.png\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport \"./AddDream.css\";\nimport test from \"./static/tesimg.png\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AddDream(props) {\n  _s();\n  let navigate = useNavigate();\n  const [submitStatus, setSubmitStatus] = useState(\"Analyze Dream\");\n  const [saved, setSaved] = useState(0);\n  const [saveButton, setSaveButton] = useState(\"Save Dream\");\n  const [dream, setDream] = useState({});\n  useEffect(() => {\n    setSaved(0);\n    setSaved(\"Dream Saved!\");\n  }, [dream.dreamAnalysis, dream.dreamContent, dream.dreamTitle]);\n  const responseGenerate = async (prompt, title) => {\n    // const result = await fetch(\"/api/ai\", {\n    //     method: \"POST\",\n    //     headers: {\n    //         \"Content-Type\": \"application/json\",\n    //     },\n    //     body: JSON.stringify({input: prompt})\n    //   })\n\n    //   if (result.ok) {\n    //     const airespond = await result.json(); // Parse the JSON response body\n    //     console.log(airespond);\n    // setDream((prevDream) => ({\n    //              ...prevDream,\n    //              dreamContent: prompt,\n    //              dreamAnalysis: airespond.result1,\n    //              dreamGenre: airespond.result2,\n    //              dreamTitle: title,\n    //         }))\n    //     setSubmitStatus(\"Submit\");\n    //     props.setDreams(prevDreams => [{dreamContent: prompt,\n    //         dreamAnalysis: airespond.result1, dreamGenre: airespond.result2}, ...prevDreams])\n    //   } else {\n    //     setSubmitStatus(\"Retry\");\n    //   }\n    setDream(prevDream => ({\n      ...prevDream,\n      dreamContent: prompt,\n      dreamAnalysis: prompt,\n      dreamGenre: \"Fantasy\",\n      dreamTitle: title,\n      dreamImage: test\n    }));\n    // props.setDreams((prevDreams) => [\n    //   {\n    //     dreamContent: prompt,\n    //     dreamAnalysis: prompt,\n    //     dreamGenre: \"Fantasy\",\n    //     dreamTitle: title,\n    //     dreamImage: test,\n    //   },\n    //   ...prevDreams,\n    // ]);\n  };\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setSubmitStatus(\"Waiting\");\n    const formData = new FormData(e.currentTarget);\n    responseGenerate(formData.get(\"dreamDesc\"), formData.get(\"dreamTitle\"));\n\n    // navigate('/Dreams', {state: {dream: formData.get(\"dreamDesc\")}});\n    // navigate('/Dreams');\n  }\n  function saveDream() {\n    if (!saved) {\n      setSaved(1);\n      props.setDreams(prevDreams => [dream, ...prevDreams]);\n    } else {\n      alert(\"Dream already saved!\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderAndNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"dreamDescription\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"label1\",\n        htmlFor: \"title\",\n        children: \"Enter a title for your dream:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"dreamTitle\",\n        id: \"title\",\n        required: true,\n        placeholder: \"My Dream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"label2\",\n        htmlFor: \"desc\",\n        children: \"Describe your dream:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"dreamDesc\",\n        id: \"desc\",\n        required: true,\n        placeholder: \"I dreamed I was flying...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"analyzeButton\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          class: \"analyzeIcon\",\n          src: analyze,\n          alt: \"analyze dream\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), submitStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), dream.dreamAnalysis && dream.dreamGenre && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"AI\",\n        children: [dream.dreamAnalysis, /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Genre: \", dream.dreamGenre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), dream.dreamImage && /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"aiImg\",\n          src: dream.dreamImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"analyzeButton\",\n        onClick: saveDream,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          class: \"analyzeIcon\",\n          src: save,\n          alt: \"save dream\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), \"Save Dream\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n_s(AddDream, \"8G8uQnyrPtok5LnSjjuPNGk9XJs=\", false, function () {\n  return [useNavigate];\n});\n_c = AddDream;\nexport default AddDream;\nvar _c;\n$RefreshReg$(_c, \"AddDream\");","map":{"version":3,"names":["HeaderAndNavBar","analyze","save","Link","useNavigate","useState","useEffect","test","jsxDEV","_jsxDEV","Fragment","_Fragment","AddDream","props","_s","navigate","submitStatus","setSubmitStatus","saved","setSaved","saveButton","setSaveButton","dream","setDream","dreamAnalysis","dreamContent","dreamTitle","responseGenerate","prompt","title","prevDream","dreamGenre","dreamImage","handleSubmit","e","preventDefault","formData","FormData","currentTarget","get","saveDream","setDreams","prevDreams","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","id","htmlFor","name","required","placeholder","class","src","alt","onClick","_c","$RefreshReg$"],"sources":["/Users/nicholasjeremy/dream-journal/frontend/src/AddDream.jsx"],"sourcesContent":["import HeaderAndNavBar from \"./HeaderAndNavBar\";\nimport analyze from \"./static/search.png\";\nimport save from \"./static/save.png\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport \"./AddDream.css\";\nimport test from \"./static/tesimg.png\";\n\nfunction AddDream(props) {\n  let navigate = useNavigate();\n  const [submitStatus, setSubmitStatus] = useState(\"Analyze Dream\");\n  const [saved, setSaved] = useState(0);\n  const [saveButton, setSaveButton] = useState(\"Save Dream\");\n  const [dream, setDream] = useState({});\n\n  useEffect(() => {\n    setSaved(0);\n    setSaved(\"Dream Saved!\");\n  }, [dream.dreamAnalysis, dream.dreamContent, dream.dreamTitle])\n\n  const responseGenerate = async (prompt, title) => {\n    // const result = await fetch(\"/api/ai\", {\n    //     method: \"POST\",\n    //     headers: {\n    //         \"Content-Type\": \"application/json\",\n    //     },\n    //     body: JSON.stringify({input: prompt})\n    //   })\n\n    //   if (result.ok) {\n    //     const airespond = await result.json(); // Parse the JSON response body\n    //     console.log(airespond);\n    // setDream((prevDream) => ({\n    //              ...prevDream,\n    //              dreamContent: prompt,\n    //              dreamAnalysis: airespond.result1,\n    //              dreamGenre: airespond.result2,\n    //              dreamTitle: title,\n    //         }))\n    //     setSubmitStatus(\"Submit\");\n    //     props.setDreams(prevDreams => [{dreamContent: prompt,\n    //         dreamAnalysis: airespond.result1, dreamGenre: airespond.result2}, ...prevDreams])\n    //   } else {\n    //     setSubmitStatus(\"Retry\");\n    //   }\n    setDream((prevDream) => ({\n      ...prevDream,\n      dreamContent: prompt,\n      dreamAnalysis: prompt,\n      dreamGenre: \"Fantasy\",\n      dreamTitle: title,\n      dreamImage: test,\n    }));\n    // props.setDreams((prevDreams) => [\n    //   {\n    //     dreamContent: prompt,\n    //     dreamAnalysis: prompt,\n    //     dreamGenre: \"Fantasy\",\n    //     dreamTitle: title,\n    //     dreamImage: test,\n    //   },\n    //   ...prevDreams,\n    // ]);\n  };\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setSubmitStatus(\"Waiting\");\n    const formData = new FormData(e.currentTarget);\n    responseGenerate(formData.get(\"dreamDesc\"), formData.get(\"dreamTitle\"));\n\n    // navigate('/Dreams', {state: {dream: formData.get(\"dreamDesc\")}});\n    // navigate('/Dreams');\n  }\n\n  function saveDream() {\n    if (!saved) {\n        setSaved(1);\n        props.setDreams((prevDreams) => [\n            dream,\n            ...prevDreams,\n          ]);\n    }\n    else {\n        alert(\"Dream already saved!\");\n    }\n  }\n\n  return (\n    <>\n      <HeaderAndNavBar />\n\n      <form onSubmit={handleSubmit} className=\"dreamDescription\">\n        <label id=\"label1\" htmlFor=\"title\">\n          Enter a title for your dream:\n        </label>\n        <input\n          name=\"dreamTitle\"\n          id=\"title\"\n          required={true}\n          placeholder=\"My Dream\"\n        ></input>\n        <label id=\"label2\" htmlFor=\"desc\">\n          Describe your dream:\n        </label>\n        <textarea\n          name=\"dreamDesc\"\n          id=\"desc\"\n          required={true}\n          placeholder=\"I dreamed I was flying...\"\n        ></textarea>\n        <button class=\"analyzeButton\">\n          <img class=\"analyzeIcon\" src={analyze} alt=\"analyze dream\" />\n          {submitStatus}\n        </button>\n      </form>\n      {dream.dreamAnalysis && dream.dreamGenre && (\n        <>\n          <div id=\"AI\">\n            {dream.dreamAnalysis}\n            <p>Genre: {dream.dreamGenre}</p>\n            {dream.dreamImage && <img id=\"aiImg\" src={dream.dreamImage} />}\n          </div>\n          <button class=\"analyzeButton\" onClick={saveDream}>\n            <img class=\"analyzeIcon\" src={save} alt=\"save dream\" />\n            Save Dream\n          </button>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default AddDream;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}