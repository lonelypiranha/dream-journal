{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasjeremy/dream-journal/frontend/src/AddDream.jsx\",\n  _s = $RefreshSig$();\nimport HeaderAndNavBar from './HeaderAndNavBar';\nimport analyze from './static/search.png';\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router\";\nimport { useState } from \"react\";\nimport axios from 'axios';\nimport './AddDream.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AddDream(props) {\n  _s();\n  let navigate = useNavigate();\n  const [submitStatus, setSubmitStatus] = useState(\"Analyze Dream\");\n  const [dream, setDream] = useState({\n    dreamAnalysis: \"hi\",\n    dre\n  });\n  const responseGenerate = async prompt => {\n    const result = await fetch(\"/api/ai\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        input: prompt\n      })\n    });\n    if (result.ok) {\n      const airespond = await result.json(); // Parse the JSON response body\n      console.log(airespond);\n      setDream(prevDream => ({\n        ...prevDream,\n        dreamContent: prompt,\n        dreamAnalysis: airespond.result1,\n        dreamGenre: airespond.result2\n      }));\n      setSubmitStatus(\"Submit\");\n      props.setDreams(prevDreams => [{\n        dreamContent: prompt,\n        dreamAnalysis: airespond.result1,\n        dreamGenre: airespond.result2\n      }, ...prevDreams]);\n    } else {\n      setSubmitStatus(\"Retry\");\n    }\n  };\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setSubmitStatus(\"Waiting\");\n    const formData = new FormData(e.currentTarget);\n    responseGenerate(formData.get(\"dreamDesc\"));\n\n    // navigate('/Dreams', {state: {dream: formData.get(\"dreamDesc\")}});\n    // navigate('/Dreams');\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderAndNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Describe your dream:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"dreamDescription\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"dreamDesc\",\n        required: true,\n        placeholder: \"I dreamed I was flying...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"analyzeButton\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          class: \"analyzeIcon\",\n          src: analyze,\n          alt: \"analyze dream\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), submitStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), dream.dreamAnalysis && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"AI\",\n      children: dream.dreamAnalysis\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 31\n    }, this), dream.dreamGenre && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"AI\",\n      children: [\"Genre: \", dream.dreamGenre]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true);\n}\n_s(AddDream, \"lYaGGrys3xhEoyORS5TJEopwZ3A=\", false, function () {\n  return [useNavigate];\n});\n_c = AddDream;\nexport default AddDream;\nvar _c;\n$RefreshReg$(_c, \"AddDream\");","map":{"version":3,"names":["HeaderAndNavBar","analyze","Link","useNavigate","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","AddDream","props","_s","navigate","submitStatus","setSubmitStatus","dream","setDream","dreamAnalysis","dre","responseGenerate","prompt","result","fetch","method","headers","body","JSON","stringify","input","ok","airespond","json","console","log","prevDream","dreamContent","result1","dreamGenre","result2","setDreams","prevDreams","handleSubmit","e","preventDefault","formData","FormData","currentTarget","get","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","name","required","placeholder","class","src","alt","id","_c","$RefreshReg$"],"sources":["/Users/nicholasjeremy/dream-journal/frontend/src/AddDream.jsx"],"sourcesContent":["import HeaderAndNavBar from './HeaderAndNavBar';\nimport analyze from './static/search.png';\nimport {Link} from \"react-router-dom\";\nimport { useNavigate } from \"react-router\";\nimport { useState } from \"react\"\nimport axios from 'axios';\nimport './AddDream.css';\n\nfunction AddDream(props) {\n    let navigate = useNavigate();\n    const [submitStatus, setSubmitStatus] = useState(\"Analyze Dream\");\n    const [dream, setDream] = useState({dreamAnalysis: \"hi\", dre});\n\n    const responseGenerate = async (prompt) => {\n        const result = await fetch(\"/api/ai\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({input: prompt})\n          })\n          \n          if (result.ok) {\n            const airespond = await result.json(); // Parse the JSON response body\n            console.log(airespond);\n            setDream((prevDream) => ({\n                         ...prevDream,\n                         dreamContent: prompt,\n                         dreamAnalysis: airespond.result1,\n                         dreamGenre: airespond.result2,\n                    }))\n            setSubmitStatus(\"Submit\");\n            props.setDreams(prevDreams => [{dreamContent: prompt,\n                dreamAnalysis: airespond.result1, dreamGenre: airespond.result2}, ...prevDreams])\n          } else {\n            setSubmitStatus(\"Retry\");\n          }\n      };\n    \n    async function handleSubmit(e) {\n        e.preventDefault();\n        setSubmitStatus(\"Waiting\");\n        const formData = new FormData(e.currentTarget);\n        responseGenerate(formData.get(\"dreamDesc\"),);\n        \n        // navigate('/Dreams', {state: {dream: formData.get(\"dreamDesc\")}});\n        // navigate('/Dreams');\n    }\n\n    return (\n      <>\n      <HeaderAndNavBar />\n      <h1>Describe your dream:</h1>\n      <form onSubmit={handleSubmit} className='dreamDescription'>\n            <textarea name='dreamDesc' required={true} placeholder='I dreamed I was flying...'></textarea>\n            <button class=\"analyzeButton\"> \n            <img class=\"analyzeIcon\" src={analyze} alt=\"analyze dream\" />\n            {submitStatus}\n            </button>\n      </form>\n      {dream.dreamAnalysis && <div id='AI'>{dream.dreamAnalysis}</div>}\n      {dream.dreamGenre && <div id='AI'>Genre: {dream.dreamGenre}</div>}\n      </>\n    );\n  }\n  \n  export default AddDream;\n\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}